---
import type { CollectionEntry } from "astro:content";
import Pagination from "@/components/Paginator.astro";
import PostPreview from "@/components/blog/PostPreview.astro";
import ProjectPreview from "@/components/project/PostPreview.astro";
import { getAllPosts, getUniqueTags as getUniquePostTags, sortMDByDate as sortPostsByDate } from "@/data/post";
import { getAllProjects, getUniqueTags as getUniqueProjectTags, sortMDByDate as sortProjectsByDate } from "@/data/project";
import PageLayout from "@/layouts/Base.astro";
import type { GetStaticPaths, Page } from "astro";

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
	const allPosts = await getAllPosts();
	const allPostsByDate = sortPostsByDate(allPosts);
	const allProjects = await getAllProjects();
	const allProjectsByDate = sortProjectsByDate(allProjects);
	
	const postTags = getUniquePostTags(allPostsByDate);
	const projectTags = getUniqueProjectTags(allProjectsByDate);
	const uniqueTags = [...new Set([...postTags, ...projectTags])];

	return uniqueTags.flatMap((tag) => {
		const filterPosts = allPostsByDate.filter((post) => post.data.tags.includes(tag));
		const filterProjects = allProjectsByDate.filter((project) => project.data.tags.includes(tag));
		const combined = [...filterPosts, ...filterProjects];
		return paginate(combined, {
			pageSize: 10,
			params: { tag },
		});
	});
};

interface Props {
	page: Page<CollectionEntry<"post"> | CollectionEntry<"project">>;
}

const { page } = Astro.props;
const { tag } = Astro.params;

const meta = {
	description: `View all posts and projects with the tag - ${tag}`,
	title: `Tag: ${tag}`,
};

const paginationProps = {
	...(page.url.prev && {
		prevUrl: {
			text: "← Previous Tags",
			url: page.url.prev,
		},
	}),
	...(page.url.next && {
		nextUrl: {
			text: "Next Tags →",
			url: page.url.next,
		},
	}),
};
---

<PageLayout meta={meta}>
	<h1 class="title mb-6 flex items-center">
		<a class="text-accent sm:hover:underline" href="/tags/">Tags</a>
		<span class="me-3 ms-2">→</span>
		<span class="text-xl">#{tag}</span>
	</h1>
	<section aria-label="Blog post list">
		<ul class="space-y-8">
			{
				page.data.map((p) => (
					<li class="flex flex-col flex-wrap gap-2 sm:flex-row [&_q]:basis-full">
						{p.collection === "post" ? (
							<PostPreview as="h2" post={p as CollectionEntry<"post">} withDesc />
						) : (
							<ProjectPreview as="h2" project={p as CollectionEntry<"project">} withDesc />
						)}
					</li>
				))
			}
		</ul>
		<Pagination {...paginationProps} />
	</section>
</PageLayout>
